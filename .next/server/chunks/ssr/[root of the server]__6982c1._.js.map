{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 31, "column": 0}, "map": {"version":3,"sources":["file:///Users/karolita/Documents/GitHub/B-Ride-The-Ride-Sharing-App-for-Bruins/src/components/ui/button.tsx"],"sourcesContent":["import React from 'react';\n\ninterface ButtonProps extends React.ButtonHTMLAttributes<HTMLButtonElement> {}\n\nexport const Button: React.FC<ButtonProps> = ({ children, className, ...props }) => {\n  return (\n    <button {...props} className={className}>\n      {children}\n    </button>\n  );\n};\n"],"names":[],"mappings":";;;;;AAIO,MAAM,SAAgC,CAAC,EAAE,QAAQ,EAAE,SAAS,EAAE,GAAG,OAAO;IAC7E,qBACE,8OAAC;QAAQ,GAAG,KAAK;QAAE,WAAW;kBAC3B;;;;;;AAGP"}},
    {"offset": {"line": 47, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 53, "column": 0}, "map": {"version":3,"sources":["file:///Users/karolita/Documents/GitHub/B-Ride-The-Ride-Sharing-App-for-Bruins/src/components/ui/card.tsx"],"sourcesContent":["import React from 'react';\n\n// The main Card component\nexport const Card: React.FC<{\n  children: React.ReactNode;\n  className?: string;\n}> = ({ children, className }) => {\n  return (\n    <div className={`bg-white p-6 rounded-lg shadow-md ${className || \"\"}`}>\n      {children}\n    </div>\n  );\n};\n\n// The CardHeader component\nexport const CardHeader: React.FC<{\n  children: React.ReactNode;\n  className?: string;\n}> = ({ children, className }) => {\n  return <div className={`mb-4 ${className || \"\"}`}>{children}</div>;\n};\n\n// The CardTitle component that now supports className\nexport const CardTitle: React.FC<{\n  children: React.ReactNode;\n  className?: string;\n}> = ({ children, className }) => {\n  return (\n    <h2 className={`text-xl font-semibold ${className || \"\"}`}>\n      {children}\n    </h2>\n  );\n};\n\n// The CardContent component\nexport const CardContent: React.FC<{\n  children: React.ReactNode;\n  className?: string;\n}> = ({ children, className }) => {\n  return <div className={className}>{children}</div>;\n};\n"],"names":[],"mappings":";;;;;;;;AAGO,MAAM,OAGR,CAAC,EAAE,QAAQ,EAAE,SAAS,EAAE;IAC3B,qBACE,8OAAC;QAAI,WAAW,CAAC,kCAAkC,EAAE,aAAa,IAAI;kBACnE;;;;;;AAGP;AAGO,MAAM,aAGR,CAAC,EAAE,QAAQ,EAAE,SAAS,EAAE;IAC3B,qBAAO,8OAAC;QAAI,WAAW,CAAC,KAAK,EAAE,aAAa,IAAI;kBAAG;;;;;;AACrD;AAGO,MAAM,YAGR,CAAC,EAAE,QAAQ,EAAE,SAAS,EAAE;IAC3B,qBACE,8OAAC;QAAG,WAAW,CAAC,sBAAsB,EAAE,aAAa,IAAI;kBACtD;;;;;;AAGP;AAGO,MAAM,cAGR,CAAC,EAAE,QAAQ,EAAE,SAAS,EAAE;IAC3B,qBAAO,8OAAC;QAAI,WAAW;kBAAY;;;;;;AACrC"}},
    {"offset": {"line": 101, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 107, "column": 0}, "map": {"version":3,"sources":["file:///Users/karolita/Documents/GitHub/B-Ride-The-Ride-Sharing-App-for-Bruins/src/components/ui/input.tsx"],"sourcesContent":["import React from 'react';\n\ninterface InputProps extends React.InputHTMLAttributes<HTMLInputElement> {}\n\nexport const Input: React.FC<InputProps> = ({ className, ...props }) => {\n  return (\n    <input {...props} className={className} />\n  );\n};\n"],"names":[],"mappings":";;;;;AAIO,MAAM,QAA8B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO;IACjE,qBACE,8OAAC;QAAO,GAAG,KAAK;QAAE,WAAW;;;;;;AAEjC"}},
    {"offset": {"line": 122, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 128, "column": 0}, "map": {"version":3,"sources":["file:///Users/karolita/Documents/GitHub/B-Ride-The-Ride-Sharing-App-for-Bruins/src/components/ui/textarea.tsx"],"sourcesContent":["import * as React from \"react\";\n\nexport interface TextareaProps extends React.TextareaHTMLAttributes<HTMLTextAreaElement> {}\n\nexport const Textarea = React.forwardRef<HTMLTextAreaElement, TextareaProps>(\n  ({ className, ...props }, ref) => {\n    return (\n      <textarea\n        ref={ref}\n        className={`border border-gray-300 rounded-lg p-2 w-full ${className}`}\n        {...props}\n      />\n    );\n  }\n);\nTextarea.displayName = \"Textarea\";\n"],"names":[],"mappings":";;;;AAAA;;;AAIO,MAAM,yBAAW,sMAAM,UAAU,CACtC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE;IACxB,qBACE,8OAAC;QACC,KAAK;QACL,WAAW,CAAC,6CAA6C,EAAE,WAAW;QACrE,GAAG,KAAK;;;;;;AAGf;AAEF,SAAS,WAAW,GAAG"}},
    {"offset": {"line": 147, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 153, "column": 0}, "map": {"version":3,"sources":["file:///Users/karolita/Documents/GitHub/B-Ride-The-Ride-Sharing-App-for-Bruins/src/app/page.tsx"],"sourcesContent":["\"use client\";\n\nimport { useRouter } from \"next/navigation\";\nimport { useEffect, useState } from \"react\";\nimport Image from \"next/image\";\nimport { Button } from \"@/components/ui/button\";\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Dialog, DialogTrigger, DialogContent, DialogHeader, DialogTitle } from \"@/components/ui/dialog\";\nimport { Input } from \"@/components/ui/input\";\nimport { Textarea } from \"@/components/ui/textarea\";\n\ninterface RidePost {\n  type: \"Offering\" | \"Wanting\";\n  from: string;\n  to: string;\n  time: string;\n  specifications: string;\n  cost: string;\n}\n\nexport default function Dashboard() {\n  const router = useRouter();\n  const [user, setUser] = useState<{ name?: string; profilePic?: string; email?: string }>({});\n  const [posts, setPosts] = useState<RidePost[]>([]);\n  const [newPost, setNewPost] = useState<RidePost>({\n    type: \"Offering\",\n    from: \"\",\n    to: \"\",\n    time: \"\",\n    specifications: \"\",\n    cost: \"\",\n  });\n\n  useEffect(() => {\n    const storedUser = JSON.parse(localStorage.getItem(\"user\") || \"{}\");\n    setUser(storedUser);\n    const storedPosts = JSON.parse(localStorage.getItem(\"posts\") || \"[]\");\n    setPosts(storedPosts);\n  }, []);\n\n  const handleCreatePost = () => {\n    if (!newPost.from || !newPost.to || !newPost.time || !newPost.cost) {\n      alert(\"Please fill in all required fields.\");\n      return;\n    }\n\n    const updatedPosts = [newPost, ...posts];\n    setPosts(updatedPosts);\n    localStorage.setItem(\"posts\", JSON.stringify(updatedPosts));\n\n    setNewPost({\n      type: \"Offering\",\n      from: \"\",\n      to: \"\",\n      time: \"\",\n      specifications: \"\",\n      cost: \"\",\n    });\n  };\n\n  return (\n    <div className=\"flex min-h-screen bg-gradient-to-br from-[#4D9FFF] to-[#020B3B] text-white\">\n      {/* Sidebar */}\n      <aside className=\"w-64 bg-[#F0F4F8] text-gray-900 shadow-xl flex flex-col items-center p-6 rounded-r-3xl\">\n        {/* Profile Picture */}\n        <Image\n          src={user.profilePic || \"/default-avatar.png\"}\n          alt=\"Profile Picture\"\n          width={150}\n          height={100}\n          className=\"rounded-full border-4 border-gray-300 shadow-lg\"\n        />\n        <h2 className=\"text-lg font-semibold mt-3\">{user.name || \"User\"}</h2>\n        <p className=\"text-sm text-gray-500\">{user.email || \"No email\"}</p>\n\n        {/* Sidebar Navigation */}\n        <nav className=\"mt-6 w-full space-y-2\">\n          <Button className=\"w-full bg-gradient-to-r from-[#172554] to-[#2563eb] hover:opacity-90 text-white shadow-md rounded-full py-2 text-sm font-medium\" onClick={() => router.push(\"/profile\")}>\n            View Profile\n          </Button>\n          <Button className=\"w-full bg-gradient-to-r from-[#4D9FFF] to-[#1E3A8A] hover:opacity-90 text-white shadow-md rounded-full py-2 text-sm font-medium\" onClick={() => router.push(\"/ride-history\")}>\n            Ride History\n          </Button>\n        </nav>\n\n        {/* Emergency Contact & Logout */}\n        <div className=\"mt-auto w-full space-y-2\">\n          <Button className=\"w-full bg-[#FF6B6B] hover:bg-[#D2665A] text-white shadow-md rounded-full py-2 text-sm font-medium\" onClick={() => router.push(\"/emergency-contact\")}>\n            ðŸš¨ Emergency Contact\n          </Button>\n          <Button className=\"w-full bg-[#D4A017] hover:bg-[#C79800] text-white shadow-md rounded-full py-2 text-sm font-medium\" onClick={() => router.push(\"/settings\")}>\n            Settings\n          </Button>\n          <Button className=\"w-full bg-[#D4A017] hover:bg-[#C79800] text-white shadow-md rounded-full py-2 text-sm font-medium\" onClick={() => router.push(\"/logout\")}>\n            Logout\n          </Button>\n        </div>\n      </aside>\n\n      {/* Main Content */}\n      <div className=\"flex-1 p-8\">\n        {/* Header */}\n        <div className=\"flex justify-between items-center\">\n          <h1 className=\"text-4xl font-bold tracking-tight\">Welcome, {user.name || \"Bruin\"}! ðŸš—</h1>\n          <Dialog>\n            <DialogTrigger asChild>\n              <Button className=\"bg-[#2563EB] text-white px-4 py-2 rounded-full shadow-md\">\n                + Make a Post\n              </Button>\n            </DialogTrigger>\n            <DialogContent className=\"bg-white text-gray-900 p-6 rounded-lg shadow-lg\">\n              <DialogHeader>\n                <DialogTitle className=\"text-xl font-semibold\">Create a Ride Post</DialogTitle>\n              </DialogHeader>\n              <div className=\"space-y-4\">\n                {/* Select Type */}\n                <div className=\"flex space-x-4\">\n                  <Button\n                    className={`flex-1 ${newPost.type === \"Offering\" ? \"bg-[#2563EB] text-white\" : \"bg-gray-200 text-gray-700\"} py-2 rounded-full`}\n                    onClick={() => setNewPost({ ...newPost, type: \"Offering\" })}\n                  >\n                    Offering a Ride\n                  </Button>\n                  <Button\n                    className={`flex-1 ${newPost.type === \"Wanting\" ? \"bg-[#E6B400] text-black\" : \"bg-gray-200 text-gray-700\"} py-2 rounded-full`}\n                    onClick={() => setNewPost({ ...newPost, type: \"Wanting\" })}\n                  >\n                    Wanting a Ride\n                  </Button>\n                </div>\n\n                {/* Input Fields */}\n                <Input placeholder=\"From\" value={newPost.from} onChange={(e) => setNewPost({ ...newPost, from: e.target.value })} />\n                <Input placeholder=\"To\" value={newPost.to} onChange={(e) => setNewPost({ ...newPost, to: e.target.value })} />\n                <Input type=\"datetime-local\" value={newPost.time} onChange={(e) => setNewPost({ ...newPost, time: e.target.value })} />\n                <Textarea placeholder=\"Specifications (optional)\" value={newPost.specifications} onChange={(e) => setNewPost({ ...newPost, specifications: e.target.value })} />\n                <Input placeholder=\"Cost ($)\" type=\"number\" value={newPost.cost} onChange={(e) => setNewPost({ ...newPost, cost: e.target.value })} />\n\n                {/* Submit Button */}\n                <Button className=\"w-full bg-[#2563EB] text-white py-2 rounded-full\" onClick={handleCreatePost}>\n                  Post Ride\n                </Button>\n              </div>\n            </DialogContent>\n          </Dialog>\n        </div>\n\n        {/* Ride Posts */}\n        <div className=\"mt-6 space-y-4\">\n          {posts.length > 0 ? (\n            posts.map((post, index) => (\n              <Card key={index} className=\"bg-white text-gray-900 p-4 rounded-lg shadow-md\">\n                <CardHeader>\n                  <CardTitle className=\"text-lg font-semibold\">\n                    {post.type === \"Offering\" ? \"ðŸš— Offering a Ride\" : \"ðŸ›‘ Wanting a Ride\"}\n                  </CardTitle>\n                </CardHeader>\n                <CardContent>\n                  <p><strong>From:</strong> {post.from} â†’ <strong>To:</strong> {post.to}</p>\n                  <p><strong>Time:</strong> {new Date(post.time).toLocaleString()}</p>\n                  <p><strong>Cost:</strong> ${post.cost}</p>\n                  {post.specifications && <p><strong>Specifications:</strong> {post.specifications}</p>}\n                </CardContent>\n              </Card>\n            ))\n          ) : (\n            <p className=\"text-center text-gray-400\">No posts yet.</p>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n}\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AACA;AACA;;;;;;AAEA;AACA;AATA;;;;;;;;;;AAoBe,SAAS;IACtB,MAAM,SAAS,CAAA,GAAA,kIAAA,CAAA,YAAS,AAAD;IACvB,MAAM,CAAC,MAAM,QAAQ,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAA0D,CAAC;IAC1F,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAc,EAAE;IACjD,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAY;QAC/C,MAAM;QACN,MAAM;QACN,IAAI;QACJ,MAAM;QACN,gBAAgB;QAChB,MAAM;IACR;IAEA,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,MAAM,aAAa,KAAK,KAAK,CAAC,aAAa,OAAO,CAAC,WAAW;QAC9D,QAAQ;QACR,MAAM,cAAc,KAAK,KAAK,CAAC,aAAa,OAAO,CAAC,YAAY;QAChE,SAAS;IACX,GAAG,EAAE;IAEL,MAAM,mBAAmB;QACvB,IAAI,CAAC,QAAQ,IAAI,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,QAAQ,IAAI,IAAI,CAAC,QAAQ,IAAI,EAAE;YAClE,MAAM;YACN;QACF;QAEA,MAAM,eAAe;YAAC;eAAY;SAAM;QACxC,SAAS;QACT,aAAa,OAAO,CAAC,SAAS,KAAK,SAAS,CAAC;QAE7C,WAAW;YACT,MAAM;YACN,MAAM;YACN,IAAI;YACJ,MAAM;YACN,gBAAgB;YAChB,MAAM;QACR;IACF;IAEA,qBACE,8OAAC;QAAI,WAAU;;0BAEb,8OAAC;gBAAM,WAAU;;kCAEf,8OAAC,6HAAA,CAAA,UAAK;wBACJ,KAAK,KAAK,UAAU,IAAI;wBACxB,KAAI;wBACJ,OAAO;wBACP,QAAQ;wBACR,WAAU;;;;;;kCAEZ,8OAAC;wBAAG,WAAU;kCAA8B,KAAK,IAAI,IAAI;;;;;;kCACzD,8OAAC;wBAAE,WAAU;kCAAyB,KAAK,KAAK,IAAI;;;;;;kCAGpD,8OAAC;wBAAI,WAAU;;0CACb,8OAAC,kIAAA,CAAA,SAAM;gCAAC,WAAU;gCAAkI,SAAS,IAAM,OAAO,IAAI,CAAC;0CAAa;;;;;;0CAG5L,8OAAC,kIAAA,CAAA,SAAM;gCAAC,WAAU;gCAAkI,SAAS,IAAM,OAAO,IAAI,CAAC;0CAAkB;;;;;;;;;;;;kCAMnM,8OAAC;wBAAI,WAAU;;0CACb,8OAAC,kIAAA,CAAA,SAAM;gCAAC,WAAU;gCAAoG,SAAS,IAAM,OAAO,IAAI,CAAC;0CAAuB;;;;;;0CAGxK,8OAAC,kIAAA,CAAA,SAAM;gCAAC,WAAU;gCAAoG,SAAS,IAAM,OAAO,IAAI,CAAC;0CAAc;;;;;;0CAG/J,8OAAC,kIAAA,CAAA,SAAM;gCAAC,WAAU;gCAAoG,SAAS,IAAM,OAAO,IAAI,CAAC;0CAAY;;;;;;;;;;;;;;;;;;0BAOjK,8OAAC;gBAAI,WAAU;;kCAEb,8OAAC;wBAAI,WAAU;;0CACb,8OAAC;gCAAG,WAAU;;oCAAoC;oCAAU,KAAK,IAAI,IAAI;oCAAQ;;;;;;;0CACjF,8OAAC;;kDACC,8OAAC;wCAAc,OAAO;kDACpB,cAAA,8OAAC,kIAAA,CAAA,SAAM;4CAAC,WAAU;sDAA2D;;;;;;;;;;;kDAI/E,8OAAC;wCAAc,WAAU;;0DACvB,8OAAC;0DACC,cAAA,8OAAC;oDAAY,WAAU;8DAAwB;;;;;;;;;;;0DAEjD,8OAAC;gDAAI,WAAU;;kEAEb,8OAAC;wDAAI,WAAU;;0EACb,8OAAC,kIAAA,CAAA,SAAM;gEACL,WAAW,CAAC,OAAO,EAAE,QAAQ,IAAI,KAAK,aAAa,4BAA4B,4BAA4B,kBAAkB,CAAC;gEAC9H,SAAS,IAAM,WAAW;wEAAE,GAAG,OAAO;wEAAE,MAAM;oEAAW;0EAC1D;;;;;;0EAGD,8OAAC,kIAAA,CAAA,SAAM;gEACL,WAAW,CAAC,OAAO,EAAE,QAAQ,IAAI,KAAK,YAAY,4BAA4B,4BAA4B,kBAAkB,CAAC;gEAC7H,SAAS,IAAM,WAAW;wEAAE,GAAG,OAAO;wEAAE,MAAM;oEAAU;0EACzD;;;;;;;;;;;;kEAMH,8OAAC,iIAAA,CAAA,QAAK;wDAAC,aAAY;wDAAO,OAAO,QAAQ,IAAI;wDAAE,UAAU,CAAC,IAAM,WAAW;gEAAE,GAAG,OAAO;gEAAE,MAAM,EAAE,MAAM,CAAC,KAAK;4DAAC;;;;;;kEAC9G,8OAAC,iIAAA,CAAA,QAAK;wDAAC,aAAY;wDAAK,OAAO,QAAQ,EAAE;wDAAE,UAAU,CAAC,IAAM,WAAW;gEAAE,GAAG,OAAO;gEAAE,IAAI,EAAE,MAAM,CAAC,KAAK;4DAAC;;;;;;kEACxG,8OAAC,iIAAA,CAAA,QAAK;wDAAC,MAAK;wDAAiB,OAAO,QAAQ,IAAI;wDAAE,UAAU,CAAC,IAAM,WAAW;gEAAE,GAAG,OAAO;gEAAE,MAAM,EAAE,MAAM,CAAC,KAAK;4DAAC;;;;;;kEACjH,8OAAC,oIAAA,CAAA,WAAQ;wDAAC,aAAY;wDAA4B,OAAO,QAAQ,cAAc;wDAAE,UAAU,CAAC,IAAM,WAAW;gEAAE,GAAG,OAAO;gEAAE,gBAAgB,EAAE,MAAM,CAAC,KAAK;4DAAC;;;;;;kEAC1J,8OAAC,iIAAA,CAAA,QAAK;wDAAC,aAAY;wDAAW,MAAK;wDAAS,OAAO,QAAQ,IAAI;wDAAE,UAAU,CAAC,IAAM,WAAW;gEAAE,GAAG,OAAO;gEAAE,MAAM,EAAE,MAAM,CAAC,KAAK;4DAAC;;;;;;kEAGhI,8OAAC,kIAAA,CAAA,SAAM;wDAAC,WAAU;wDAAmD,SAAS;kEAAkB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;kCASxG,8OAAC;wBAAI,WAAU;kCACZ,MAAM,MAAM,GAAG,IACd,MAAM,GAAG,CAAC,CAAC,MAAM,sBACf,8OAAC,gIAAA,CAAA,OAAI;gCAAa,WAAU;;kDAC1B,8OAAC,gIAAA,CAAA,aAAU;kDACT,cAAA,8OAAC,gIAAA,CAAA,YAAS;4CAAC,WAAU;sDAClB,KAAK,IAAI,KAAK,aAAa,uBAAuB;;;;;;;;;;;kDAGvD,8OAAC,gIAAA,CAAA,cAAW;;0DACV,8OAAC;;kEAAE,8OAAC;kEAAO;;;;;;oDAAc;oDAAE,KAAK,IAAI;oDAAC;kEAAG,8OAAC;kEAAO;;;;;;oDAAY;oDAAE,KAAK,EAAE;;;;;;;0DACrE,8OAAC;;kEAAE,8OAAC;kEAAO;;;;;;oDAAc;oDAAE,IAAI,KAAK,KAAK,IAAI,EAAE,cAAc;;;;;;;0DAC7D,8OAAC;;kEAAE,8OAAC;kEAAO;;;;;;oDAAc;oDAAG,KAAK,IAAI;;;;;;;4CACpC,KAAK,cAAc,kBAAI,8OAAC;;kEAAE,8OAAC;kEAAO;;;;;;oDAAwB;oDAAE,KAAK,cAAc;;;;;;;;;;;;;;+BAVzE;;;;sDAeb,8OAAC;4BAAE,WAAU;sCAA4B;;;;;;;;;;;;;;;;;;;;;;;AAMrD"}},
    {"offset": {"line": 637, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}