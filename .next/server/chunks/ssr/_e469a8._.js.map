{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":["file:///Users/karolita/Documents/GitHub/B-Ride-The-Ride-Sharing-App-for-Bruins/src/components/Profile.tsx"],"sourcesContent":["// \"use client\";\n\n// import { useEffect, useState } from \"react\";\n// import { useRouter } from \"next/navigation\";\n// import { Button } from \"@/components/ui/button\";\n// import { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\n// import Image from \"next/image\";\n\n// export default function ProfilePage() {\n//   const router = useRouter();\n//   const [profile, setProfile] = useState({\n//     name: \"John Doe\",\n//     bio: \"I love road trips and carpooling!\",\n//     profilePic: \"/default-avatar.png\",\n//     preferences: {\n//       language: \"English\",\n//       ridePreference: \"Comfort\",\n//     },\n//   });\n\n//   // Load profile from local storage\n//   useEffect(() => {\n//     const storedProfile = localStorage.getItem(\"userProfile\");\n//     if (storedProfile) {\n//       setProfile(JSON.parse(storedProfile));\n//     }\n//   }, []);\n\n//   // Handle profile picture upload\n//   const handleProfilePicChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n//     const file = event.target.files?.[0];\n//     if (file) {\n//       const reader = new FileReader();\n//       reader.onloadend = () => {\n//         setProfile((prev) => ({ ...prev, profilePic: reader.result as string }));\n//       };\n//       reader.readAsDataURL(file);\n//     }\n//   };\n\n//   // Handle text field changes\n//   const handleChange = (field: string, value: string) => {\n//     setProfile((prev) => ({ ...prev, [field]: value }));\n//   };\n\n//   // Handle preference changes\n//   const handlePreferenceChange = (field: string, value: any) => {\n//     setProfile((prev) => ({\n//       ...prev,\n//       preferences: { ...prev.preferences, [field]: value },\n//     }));\n//   };\n\n//   // Save profile to local storage\n//   const saveProfile = () => {\n//     localStorage.setItem(\"userProfile\", JSON.stringify(profile));\n//     alert(\"Profile saved!\");\n//   };\n\n//   return (\n//     <div className=\"min-h-screen flex flex-col items-center justify-center bg-gray-100 p-6\">\n//       <h1 className=\"text-3xl font-bold mb-4\">Edit Your Profile</h1>\n\n//       <div className=\"bg-white p-6 rounded-lg shadow-md w-[400px] text-center\">\n//         {/* Profile Picture */}\n//         <div className=\"relative w-32 h-32 mx-auto mb-4\">\n//           <Image\n//             src={profile.profilePic}\n//             alt=\"Profile Picture\"\n//             width={128}\n//             height={128}\n//             className=\"rounded-full object-cover border border-gray-300\"\n//           />\n//           <input\n//             type=\"file\"\n//             accept=\"image/*\"\n//             className=\"absolute inset-0 opacity-0 cursor-pointer\"\n//             onChange={handleProfilePicChange}\n//           />\n//         </div>\n\n//         {/* Name Input */}\n//         <label className=\"block font-semibold text-left\">Name</label>\n//         <input\n//           type=\"text\"\n//           value={profile.name}\n//           onChange={(e) => handleChange(\"name\", e.target.value)}\n//           className=\"border p-2 w-full mb-4\"\n//         />\n\n//         {/* Bio Input */}\n//         <label className=\"block font-semibold text-left\">Bio</label>\n//         <textarea\n//           value={profile.bio}\n//           onChange={(e) => handleChange(\"bio\", e.target.value)}\n//           className=\"border p-2 w-full mb-4 h-20\"\n//         />\n\n//         {/* Preferences */}\n//         <h2 className=\"text-lg font-semibold mt-4 mb-2\">Preferences</h2>\n\n//         {/* Language Selection */}\n//         <label className=\"block font-semibold text-left mt-3\">Language</label>\n//         <select\n//           value={profile.preferences.language}\n//           onChange={(e) => handlePreferenceChange(\"language\", e.target.value)}\n//           className=\"border p-2 w-full mb-4\"\n//         >\n//           <option>English</option>\n//           <option>Spanish</option>\n//           <option>French</option>\n//         </select>\n\n//         {/* Ride Preferences */}\n//         <label className=\"block font-semibold text-left\">Ride Preference</label>\n//         <select\n//           value={profile.preferences.ridePreference}\n//           onChange={(e) => handlePreferenceChange(\"ridePreference\", e.target.value)}\n//           className=\"border p-2 w-full mb-4\"\n//         >\n//           <option>Comfort</option>\n//           <option>Economy</option>\n//           <option>Luxury</option>\n//         </select>\n\n//         {/* Save Button */}\n//         <button onClick={saveProfile} className=\"bg-blue-500 text-white px-4 py-2 rounded w-full mt-4\">\n//           Save Changes\n//         </button>\n// \t<Button\n//         className=\"mt-6 bg-gray-500 hover:bg-gray-600 text-white\"\n//         onClick={() => router.push(\"/dashboard\")}\n//       >\n//         Back to Dashboard\n//       </Button>\n//       <Button\n//         className=\"mt-6 bg-gray-500 hover:bg-gray-600 text-white\"\n//         onClick={() => router.push(\"/profile\")}\n//       >\n//         Back\n//       </Button>\n//       </div>\n//     </div>\n//   );\n// }\n"],"names":[],"mappings":"AAAA,gBAAgB;AAEhB,+CAA+C;AAC/C,+CAA+C;AAC/C,mDAAmD;AACnD,mFAAmF;AACnF,kCAAkC;AAElC,0CAA0C;AAC1C,gCAAgC;AAChC,6CAA6C;AAC7C,wBAAwB;AACxB,gDAAgD;AAChD,yCAAyC;AACzC,qBAAqB;AACrB,6BAA6B;AAC7B,mCAAmC;AACnC,SAAS;AACT,QAAQ;AAER,uCAAuC;AACvC,sBAAsB;AACtB,iEAAiE;AACjE,2BAA2B;AAC3B,+CAA+C;AAC/C,QAAQ;AACR,YAAY;AAEZ,qCAAqC;AACrC,qFAAqF;AACrF,4CAA4C;AAC5C,kBAAkB;AAClB,yCAAyC;AACzC,mCAAmC;AACnC,oFAAoF;AACpF,WAAW;AACX,oCAAoC;AACpC,QAAQ;AACR,OAAO;AAEP,iCAAiC;AACjC,6DAA6D;AAC7D,2DAA2D;AAC3D,OAAO;AAEP,iCAAiC;AACjC,oEAAoE;AACpE,8BAA8B;AAC9B,iBAAiB;AACjB,8DAA8D;AAC9D,WAAW;AACX,OAAO;AAEP,qCAAqC;AACrC,gCAAgC;AAChC,oEAAoE;AACpE,+BAA+B;AAC/B,OAAO;AAEP,aAAa;AACb,+FAA+F;AAC/F,uEAAuE;AAEvE,kFAAkF;AAClF,kCAAkC;AAClC,4DAA4D;AAC5D,mBAAmB;AACnB,uCAAuC;AACvC,oCAAoC;AACpC,0BAA0B;AAC1B,2BAA2B;AAC3B,2EAA2E;AAC3E,eAAe;AACf,mBAAmB;AACnB,0BAA0B;AAC1B,+BAA+B;AAC/B,oEAAoE;AACpE,gDAAgD;AAChD,eAAe;AACf,iBAAiB;AAEjB,6BAA6B;AAC7B,wEAAwE;AACxE,iBAAiB;AACjB,wBAAwB;AACxB,iCAAiC;AACjC,mEAAmE;AACnE,+CAA+C;AAC/C,aAAa;AAEb,4BAA4B;AAC5B,uEAAuE;AACvE,oBAAoB;AACpB,gCAAgC;AAChC,kEAAkE;AAClE,oDAAoD;AACpD,aAAa;AAEb,8BAA8B;AAC9B,2EAA2E;AAE3E,qCAAqC;AACrC,iFAAiF;AACjF,kBAAkB;AAClB,iDAAiD;AACjD,iFAAiF;AACjF,+CAA+C;AAC/C,YAAY;AACZ,qCAAqC;AACrC,qCAAqC;AACrC,oCAAoC;AACpC,oBAAoB;AAEpB,mCAAmC;AACnC,mFAAmF;AACnF,kBAAkB;AAClB,uDAAuD;AACvD,uFAAuF;AACvF,+CAA+C;AAC/C,YAAY;AACZ,qCAAqC;AACrC,qCAAqC;AACrC,oCAAoC;AACpC,oBAAoB;AAEpB,8BAA8B;AAC9B,0GAA0G;AAC1G,yBAAyB;AACzB,oBAAoB;AACpB,WAAW;AACX,oEAAoE;AACpE,oDAAoD;AACpD,UAAU;AACV,4BAA4B;AAC5B,kBAAkB;AAClB,gBAAgB;AAChB,oEAAoE;AACpE,kDAAkD;AAClD,UAAU;AACV,eAAe;AACf,kBAAkB;AAClB,eAAe;AACf,aAAa;AACb,OAAO;AACP,IAAI"}},
    {"offset": {"line": 136, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 142, "column": 0}, "map": {"version":3,"sources":["file:///Users/karolita/Documents/GitHub/B-Ride-The-Ride-Sharing-App-for-Bruins/src/app/profileapp/page.tsx"],"sourcesContent":["// app/profileapp/page.tsx\nimport Profile from \"@/components/Profile\";\n\nexport default function ProfilePage() {\n  const userId = \"testUser123\";\n  \n  return (\n    <div className=\"min-h-screen flex items-center justify-center bg-gray-100\">\n      <Profile userId={userId} />\n    </div>\n  );\n}"],"names":[],"mappings":"AAAA,0BAA0B;;;;;AAC1B;;;AAEe,SAAS;IACtB,MAAM,SAAS;IAEf,qBACE,8OAAC;QAAI,WAAU;kBACb,cAAA,8OAAC,6HAAA,CAAA,UAAO;YAAC,QAAQ;;;;;;;;;;;AAGvB"}},
    {"offset": {"line": 167, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 178, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 178, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 184, "column": 0}, "map": {"version":3,"sources":["file:///Users/karolita/Documents/GitHub/B-Ride-The-Ride-Sharing-App-for-Bruins/node_modules/next/dist/src/build/templates/app-page.ts"],"sourcesContent":["import type { LoaderTree } from '../../server/lib/app-dir-module'\nimport { AppPageRouteModule } from '../../server/route-modules/app-page/module.compiled' with { 'turbopack-transition': 'next-ssr' }\nimport { RouteKind } from '../../server/route-kind'\n\n// These are injected by the loader afterwards.\n\n/**\n * The tree created in next-app-loader that holds component segments and modules\n * and I've updated it.\n */\ndeclare const tree: LoaderTree\ndeclare const pages: any\n\n// We inject the tree and pages here so that we can use them in the route\n// module.\n// INJECT:tree\n// INJECT:pages\n\nexport { tree, pages }\n\nexport { default as GlobalError } from 'VAR_MODULE_GLOBAL_ERROR'\n\n// These are injected by the loader afterwards.\ndeclare const __next_app_require__: any\ndeclare const __next_app_load_chunk__: any\n\n// INJECT:__next_app_require__\n// INJECT:__next_app_load_chunk__\n\nexport const __next_app__ = {\n  require: __next_app_require__,\n  loadChunk: __next_app_load_chunk__,\n}\n\nexport * from '../../server/app-render/entry-base'\n\n// Create and export the route module that will be consumed.\nexport const routeModule = new AppPageRouteModule({\n  definition: {\n    kind: RouteKind.APP_PAGE,\n    page: 'VAR_DEFINITION_PAGE',\n    pathname: 'VAR_DEFINITION_PATHNAME',\n    // The following aren't used in production.\n    bundlePath: '',\n    filename: '',\n    appPaths: [],\n  },\n  userland: {\n    loaderTree: tree,\n  },\n})\n"],"names":["AppPageRouteModule","RouteKind","tree","pages","default","GlobalError","__next_app__","require","__next_app_require__","loadChunk","__next_app_load_chunk__","routeModule","definition","kind","APP_PAGE","page","pathname","bundlePath","filename","appPaths","userland","loaderTree"],"mappings":";;;;;;AA0BA,8BAA8B;AAzB9B,SAASA,kBAAkB,QAAQ,2DAA2D;IAAE,wBAAwB;AAAW,EAAC;AAYpI,yEAAyE;AAEzE,cAAc;AAGd,SAASE,IAAI,EAAEC,KAAK,GAAE;AAWtB,OAAO,MAAMG,eAAe;AAG5B,EAAC;;;;;;;;;;AAED,cAAc,qCAAoC,sBAAA;AAElD,UAAA,kDAA4D;AAC5D,MAAA,CAAO,MAAMK;IAAAA;IAAAA,SAAc,IAAIX,mBAAmB;YAChDY,QAAAA;YAAAA,GAAY;YAAA;wBACVC,IAAAA;oBAAAA,CAAMZ,UAAUa;oBAAAA,OAAQ;yBACxBC,MAAM;8BACNC,IAAAA,CAAAA,GAAU;wBAAA,QAAA;4BAAA,IAAA;4BAAA;yBAAA;;uBACV,2CAA2C;;iBAC3CC,YAAY;sBACZC,IAAAA,CAAAA;YAAAA,CAAU;SAAA;;SACVC,UAAU,EAAE;UACd,QAAA;YAAA,MAAA;gBACAC,OAAU,QAAA;wBAAA;4BACRC,KAAAA,CAAAA,GAAAA,IAAYnB,uKAAZmB,CAAAA,sBAAYnB,EAAAA,MAAAA,MAAAA,MAAAA,EAAAA,iBAAAA,CAAAA,CAAAA,EAAAA,iTAAAA,CAAAA,UAAAA,CAAAA,GAAAA,CAAAA,KAAAA,CAAAA,KAAAA,MAAAA,CAAAA,CAAAA,EAAAA,CAAAA,EAAAA,EAAAA;4BACd,OAAA,GAAA,iTAAA,CAAA,UAAA,CAAA,KAAA,CAAA,CAAA,EAAA,iTAAA,CAAA,UAAA,CAAA,MAAA,EAAA;4BACA,MAAA,CAAA,YAAA,CAAA","ignoreList":[0]}},
    {"offset": {"line": 289, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}