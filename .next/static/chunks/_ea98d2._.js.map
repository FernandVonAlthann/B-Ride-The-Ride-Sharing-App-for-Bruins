{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/karolita/Documents/GitHub/B-Ride-The-Ride-Sharing-App-for-Bruins/src/components/ui/button.tsx"],"sourcesContent":["import React from 'react';\n\ninterface ButtonProps extends React.ButtonHTMLAttributes<HTMLButtonElement> {}\n\nexport const Button: React.FC<ButtonProps> = ({ children, className, ...props }) => {\n  return (\n    <button {...props} className={className}>\n      {children}\n    </button>\n  );\n};\n"],"names":[],"mappings":";;;;;AAIO,MAAM,SAAgC,CAAC,EAAE,QAAQ,EAAE,SAAS,EAAE,GAAG,OAAO;IAC7E,qBACE,6LAAC;QAAQ,GAAG,KAAK;QAAE,WAAW;kBAC3B;;;;;;AAGP;KANa"}},
    {"offset": {"line": 29, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 35, "column": 0}, "map": {"version":3,"sources":["file:///Users/karolita/Documents/GitHub/B-Ride-The-Ride-Sharing-App-for-Bruins/src/components/ui/card.tsx"],"sourcesContent":["import React from 'react';\n\n// The main Card component\nexport const Card: React.FC<{\n  children: React.ReactNode;\n  className?: string;\n}> = ({ children, className }) => {\n  return (\n    <div className={`bg-white p-6 rounded-lg shadow-md ${className || \"\"}`}>\n      {children}\n    </div>\n  );\n};\n\n// The CardHeader component\nexport const CardHeader: React.FC<{\n  children: React.ReactNode;\n  className?: string;\n}> = ({ children, className }) => {\n  return <div className={`mb-4 ${className || \"\"}`}>{children}</div>;\n};\n\n// The CardTitle component that now supports className\nexport const CardTitle: React.FC<{\n  children: React.ReactNode;\n  className?: string;\n}> = ({ children, className }) => {\n  return (\n    <h2 className={`text-xl font-semibold ${className || \"\"}`}>\n      {children}\n    </h2>\n  );\n};\n\n// The CardContent component\nexport const CardContent: React.FC<{\n  children: React.ReactNode;\n  className?: string;\n}> = ({ children, className }) => {\n  return <div className={className}>{children}</div>;\n};\n"],"names":[],"mappings":";;;;;;;;AAGO,MAAM,OAGR,CAAC,EAAE,QAAQ,EAAE,SAAS,EAAE;IAC3B,qBACE,6LAAC;QAAI,WAAW,CAAC,kCAAkC,EAAE,aAAa,IAAI;kBACnE;;;;;;AAGP;KATa;AAYN,MAAM,aAGR,CAAC,EAAE,QAAQ,EAAE,SAAS,EAAE;IAC3B,qBAAO,6LAAC;QAAI,WAAW,CAAC,KAAK,EAAE,aAAa,IAAI;kBAAG;;;;;;AACrD;MALa;AAQN,MAAM,YAGR,CAAC,EAAE,QAAQ,EAAE,SAAS,EAAE;IAC3B,qBACE,6LAAC;QAAG,WAAW,CAAC,sBAAsB,EAAE,aAAa,IAAI;kBACtD;;;;;;AAGP;MATa;AAYN,MAAM,cAGR,CAAC,EAAE,QAAQ,EAAE,SAAS,EAAE;IAC3B,qBAAO,6LAAC;QAAI,WAAW;kBAAY;;;;;;AACrC;MALa"}},
    {"offset": {"line": 95, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 101, "column": 0}, "map": {"version":3,"sources":["file:///Users/karolita/Documents/GitHub/B-Ride-The-Ride-Sharing-App-for-Bruins/src/app/AI-Chat-Assistant/page.tsx"],"sourcesContent":["\"use client\";\n\nimport { useState } from \"react\";\nimport { useRouter } from \"next/navigation\";\nimport { Button } from \"@/components/ui/button\";\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\n\n// Helper function: arithmetic calculation\nfunction calculateArithmetic(input: string): string | null {\n  const plusMatch = input.match(/(\\d+)\\s*(plus|\\+)\\s*(\\d+)/i);\n  if (plusMatch) {\n    const a = parseFloat(plusMatch[1]);\n    const b = parseFloat(plusMatch[3]);\n    return `${a} + ${b} = ${a + b}`;\n  }\n  const minusMatch = input.match(/(\\d+)\\s*(minus|\\-)\\s*(\\d+)/i);\n  if (minusMatch) {\n    const a = parseFloat(minusMatch[1]);\n    const b = parseFloat(minusMatch[3]);\n    return `${a} - ${b} = ${a - b}`;\n  }\n  const timesMatch = input.match(/(\\d+)\\s*(times|\\*)\\s*(\\d+)/i);\n  if (timesMatch) {\n    const a = parseFloat(timesMatch[1]);\n    const b = parseFloat(timesMatch[3]);\n    return `${a} * ${b} = ${a * b}`;\n  }\n  const divideMatch = input.match(/(\\d+)\\s*(divided by|\\/)\\s*(\\d+)/i);\n  if (divideMatch) {\n    const a = parseFloat(divideMatch[1]);\n    const b = parseFloat(divideMatch[3]);\n    if (b === 0) return \"Cannot divide by zero!\";\n    return `${a} / ${b} = ${a / b}`;\n  }\n  return null;\n}\n\n// Helper: Fare estimation calculation\nfunction calculateFare(input: string): string | null {\n  // Example pattern: \"distance is 5 miles, duration is 10 minutes\"\n  const fareMatch = input.match(/Distance\\s+is\\s+(\\d+(?:\\.\\d+)?)\\s*miles?,\\s*duration\\s+is\\s+(\\d+(?:\\.\\d+)?)\\s*minutes?/i);\n  if (fareMatch) {\n    const distance = parseFloat(fareMatch[1]);\n    const duration = parseFloat(fareMatch[2]);\n    const baseFare = 3;\n    const costPerMile = 1.5;\n    const costPerMinute = 0.25;\n    const cost = baseFare + (distance * costPerMile) + (duration * costPerMinute);\n    return `The estimated fare for a ride of ${distance} miles and ${duration} minutes is $${cost.toFixed(2)}.`;\n  }\n  return null;\n}\n\nconst responseRules = [\n  // Greetings and small talk\n  { pattern: /^(hi|hello|hey)\\b/i, response: \"Hello there! How can I help you today?\" },\n  { pattern: /good morning/i, response: \"Good morning! What can I assist you with?\" },\n  { pattern: /good evening/i, response: \"Good evening! How can I make your night easier?\" },\n  { pattern: /how are you/i, response: \"I'm just a friendly assistant, always here and ready to help!\" },\n  { pattern: /bye|goodbye/i, response: \"Goodbye! Have a great day, and don't hesitate to reach out if you need anything!\" },\n\n  // Ride-related\n  { pattern: /book.*ride/i, response: \"I can help you book a ride! Please share your pickup location and destination.\" },\n  { pattern: /cancel.*ride/i, response: \"Need to cancel your ride? Just let me know the ride details, and I’ll take care of it!\" },\n  { pattern: /check.*ride.*status/i, response: \"Let me check the status of your ride. Can you provide the ride ID?\" },\n  { pattern: /find.*carpool/i, response: \"Looking for a carpool? Tell me where you're headed, and I'll match you with similar routes.\" },\n  { pattern: /ride.*history/i, response: \"You can view your ride history in the 'Ride History' section of the app.\" },\n\n  // Location-based and route-related\n  { pattern: /current.*location/i, response: \"Can you share your current location? I’ll help you with directions.\" },\n  { pattern: /route/i, response: \"You can view the live route on our map section.\" },\n  { pattern: /traffic/i, response: \"If you're worried about traffic, consider leaving a bit earlier or checking real-time conditions.\" },\n  { pattern: /weather/i, response: \"I'm not a weather bot, but it's always a good day to ride!\" },\n  { pattern: /landmark/i, response: \"Looking for landmarks? Let me know your location, and I’ll help you out!\" },\n\n  // Personal profile and account management\n  { pattern: /profile|account/i, response: \"To update your profile, please head over to the Profile Customization page.\" },\n  { pattern: /edit.*account/i, response: \"To edit your account details, go to 'Account Settings'.\" },\n  { pattern: /change.*password/i, response: \"You can change your password in the 'Account Settings' section.\" },\n  { pattern: /update.*information/i, response: \"Make sure your information is up to date in your Profile Settings!\" },\n\n  // Ride features\n  { pattern: /safety/i, response: \"Safety first! Always wear your seatbelt and follow road rules.\" },\n  { pattern: /price|cost|fare/i, response: \"Need a fare estimate? Provide me the distance and duration of your ride (Distance is X miles, duration is Y minutes(for decimals format 0.0)).\" },\n  { pattern: /driver/i, response: \"Our drivers are all verified for your safety.\" },\n  { pattern: /share.*ride/i, response: \"Sharing a ride? Let’s find a suitable carpool for you.\" },\n\n  // Fun and engagement\n  { pattern: /joke/i, response: \"Why don’t skeletons ride motorcycles? Because they don’t have the guts!\" },\n  { pattern: /fact/i, response: \"Did you know? The first car was invented in 1885 by Karl Benz!\" },\n  { pattern: /funny/i, response: \"Why do cars never get tired? Because they always have 'brakes'!\" },\n  { pattern: /quote/i, response: \"Here’s a travel quote: 'The journey, not the arrival, matters.' - T.S. Eliot\" },\n\n  // Miscellaneous interests\n  { pattern: /restaurant|food/i, response: \"Looking for a bite to eat? I recommend checking out local reviews for the best spots!\" },\n  { pattern: /workout/i, response: \"Staying fit is great! Try stretching before long drives.\" },\n  { pattern: /podcast/i, response: \"Podcasts make rides better! Try 'The Daily' or '99% Invisible'.\" },\n  { pattern: /road trip/i, response: \"A road trip? Sounds exciting! Make sure to pack some snacks!\" },\n  { pattern: /holiday/i, response: \"Planning a trip for the holidays? Consider booking your ride early!\" },\n\n  // Emergency and safety\n  { pattern: /emergency/i, response: \"In case of an emergency, always dial your local emergency services!\" },\n  { pattern: /emergency kit/i, response: \"Always carry an emergency kit with jumper cables, a flashlight, and first aid.\" },\n  { pattern: /accident/i, response: \"In case of an accident, make sure to stay calm and contact emergency services.\" },\n\n  // Environment and eco-friendly\n  { pattern: /eco-friendly/i, response: \"Go green! Choose eco-friendly rides for a more sustainable journey.\" },\n  { pattern: /fuel/i, response: \"Want to save fuel? Try maintaining a steady speed and avoiding rapid acceleration.\" },\n  { pattern: /electric vehicle/i, response: \"Electric vehicles are the future! We support sustainable options for your rides.\" },\n\n  // Other random topics\n  { pattern: /pets/i, response: \"Traveling with pets? Make sure they're safely secured!\" },\n  { pattern: /adventure/i, response: \"Life is an adventure! Where are you headed next?\" },\n  { pattern: /bucket list/i, response: \"What’s on your travel bucket list? I'd love to hear it!\" },\n  { pattern: /celebration/i, response: \"Celebrating something special? A shared ride makes it more fun!\" },\n  { pattern: /sunset/i, response: \"Sunset drives are the best! Find a scenic route and enjoy.\" },\n  { pattern: /morning routine/i, response: \"Start your day with a smooth ride! How can I assist with your commute?\" },\n\n  // Health and wellness\n  { pattern: /hydration/i, response: \"Stay hydrated, especially on long rides! Always keep a water bottle nearby.\" },\n  { pattern: /sleep/i, response: \"Getting enough rest before a long ride is key! Make sure you're well-rested.\" },\n  { pattern: /stretch/i, response: \"Take breaks and stretch during long journeys to avoid stiffness.\" },\n\n  // Technology and gadgets\n  { pattern: /phone/i, response: \"Don't forget to charge your phone before your ride. A charged phone is always handy!\" },\n  { pattern: /gps/i, response: \"Make sure your GPS is set up before heading out for smooth navigation.\" },\n  { pattern: /app/i, response: \"Need help with the app? Feel free to ask about any features!\" },\n\n  // Miscellaneous\n  { pattern: /shopping/i, response: \"Need a shopping stop? Let me know where to go!\" },\n  { pattern: /travel/i, response: \"Traveling soon? Let's make sure your ride is booked!\" },\n  { pattern: /fashion/i, response: \"Looking for fashion tips? A stylish outfit can make your ride even better!\" },\n  { pattern: /pets/i, response: \"Bringing your furry friend along? Let's make sure they’re comfortable!\" },\n  { pattern: /smart/i, response: \"While not the smartest, I do what I can!\" },\n  { pattern: /help me/i, response: \"I can help with a lot of things, like the cost of fares and routing you to other features!\" },\n  \n  // Catch-all response\n  { pattern: /.*/, response: \"I'm not entirely sure what you mean. Could you please rephrase that?\" }\n];\n\nexport default function AIChatAssistant() {\n  const router = useRouter();\n  const [messages, setMessages] = useState<{ role: string; text: string }[]>([\n    { role: \"bot\", text: \"Hello! How can I assist you today?\" },\n  ]);\n  const [input, setInput] = useState(\"\");\n  // For routing confirmations\n  const [pendingRoute, setPendingRoute] = useState<string | null>(null);\n\n  const processInput = (userInput: string) => {\n    // Check arithmetic first\n    const arithmeticResult = calculateArithmetic(userInput);\n    if (arithmeticResult) return arithmeticResult;\n\n    // Check fare calculation\n    const fareResult = calculateFare(userInput);\n    if (fareResult) return fareResult;\n\n    // Check for \"send to\" commands\n    const sendToMatch = userInput.match(/send\\s+(?:me\\s+to\\s+)?(.*)/i);\n    if (sendToMatch) {\n      const feature = sendToMatch[1].trim();\n      // Set pending route if feature is recognized (simulate known features)\n      // For example, if feature contains \"profile\", \"map\", \"chat\", \"payment\"\n      if (/profile/i.test(feature)) {\n        setPendingRoute(\"/profile\");\n        return \"Do you want me to route you to your profile page? (yes/no)\";\n      } else if (/map/i.test(feature)) {\n        setPendingRoute(\"/map\");\n        return \"Do you want me to show you the live map? (yes/no)\";\n      } else if (/chat/i.test(feature)) {\n        setPendingRoute(\"/group-chat\");\n        return \"Do you want me to open the group chat for you? (yes/no)\";\n      } else if (/payment/i.test(feature)) {\n        setPendingRoute(\"/payment\");\n        return \"Do you want me to take you to the payment page? (yes/no)\";\n      } else if (/ride history/i.test(feature)) {\n        setPendingRoute(\"/ride-history\");\n        return \"Do you want me to show you your ride history? (yes/no)\";\n      } else if (/saved locations/i.test(feature)) {\n        setPendingRoute(\"/saved-locations\");\n        return \"Do you want me to take you to your saved locations? (yes/no)\";\n      } else if (/fare/i.test(feature)) {\n        return \"Please provide the distance and duration (e.g., 'distance is 5 miles, duration is 10 minutes').\";\n      } else {\n        return \"I'm not sure what feature you mean. Please try again.\";\n      }\n    }\n\n    // If pending route exists and user responds \"yes\" or \"no\"\n    if (pendingRoute) {\n      if (/^(yes|y)$/i.test(userInput.trim())) {\n        const route = pendingRoute;\n        setPendingRoute(null);\n        router.push(route);\n        return `Routing you to ${route}...`;\n      } else if (/^(no|n)$/i.test(userInput.trim())) {\n        setPendingRoute(null);\n        return \"Okay, staying on the current page.\";\n      }\n    }\n\n    // Process response rules\n    for (const rule of responseRules) {\n      if (rule.pattern.test(userInput)) {\n        return rule.response;\n      }\n    }\n\n    return \"I'm not sure how to help with that.\";\n  };\n\n  const handleSend = () => {\n    if (!input.trim()) return;\n    const userMessage = { role: \"user\", text: input };\n    const newMessages = [...messages, userMessage];\n    setMessages(newMessages);\n\n    // Get bot response\n    const botResponse = processInput(input);\n    setInput(\"\");\n    setTimeout(() => {\n      setMessages((prev) => [...prev, { role: \"bot\", text: botResponse }]);\n    }, 1000);\n  };\n\n  return (\n    <div className=\"flex flex-col items-center justify-center min-h-screen bg-gray-100 text-black p-6\">\n      <Card>\n        <CardHeader>\n          <CardTitle>AI Assistant</CardTitle>\n        </CardHeader>\n        <CardContent className=\"h-80 overflow-y-auto border p-2\">\n          {messages.map((msg, index) => (\n            <p\n              key={index}\n              className={\n                msg.role === \"user\" ? \"text-right text-blue-500\" : \"text-left text-gray-700\"\n              }\n            >\n              {msg.text}\n            </p>\n          ))}\n        </CardContent>\n        <div className=\"p-2 flex gap-2\">\n          <input\n            type=\"text\"\n            className=\"flex-1 border rounded p-2\"\n            value={input}\n            onChange={(e) => setInput(e.target.value)}\n            placeholder=\"Ask me something...\"\n          />\n          <Button onClick={handleSend} className=\"bg-gray-500 hover:bg-gray-600 text-white\">\n            Send\n          </Button>\n        </div>\n      </Card>\n      <Button onClick={() => router.push(\"/dashboard\")} className=\"bg-gray-500 hover:bg-gray-600 text-white\">\n          Go Back\n      </Button>\n    </div>\n  );\n}\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 592, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 602, "column": 0}, "map": {"version":3,"sources":["file:///Users/karolita/Documents/GitHub/B-Ride-The-Ride-Sharing-App-for-Bruins/node_modules/next/navigation.js"],"sourcesContent":["module.exports = require('./dist/client/components/navigation')\n"],"names":[],"mappings":"AAAA,OAAO,OAAO","ignoreList":[0]}},
    {"offset": {"line": 603, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}